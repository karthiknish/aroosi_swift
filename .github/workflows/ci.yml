name: CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

concurrency:
  group: flutter-ci-${{ github.ref }}
  cancel-in-progress: true

env:
  FLUTTER_CHANNEL: stable
  FLUTTER_VERSION: '3.35.4'
  GOOGLESERVICE_INFO_PLIST_BASE64: ${{ secrets.GOOGLESERVICE_INFO_PLIST_BASE64 }}
  ASC_API_KEY_ID: ${{ secrets.ASC_API_KEY_ID }}
  ASC_API_KEY_ISSUER_ID: ${{ secrets.ASC_API_KEY_ISSUER_ID }}
  ASC_API_KEY_P8_BASE64: ${{ secrets.ASC_API_KEY_P8_BASE64 }}

jobs:
  quality:
    name: Flutter Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Create CI .env
        run: |
          cat <<'EOF' > .env
          ENVIRONMENT=staging
          API_BASE_URL=https://staging.aroosi.app/api
          FIREBASE_STORAGE_BUCKET=
          GOOGLE_WEB_CLIENT_ID=
          GOOGLE_IOS_CLIENT_ID=
          GOOGLE_ANDROID_CLIENT_ID=
          EOF

      - name: Cache pub cache
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install dependencies
        run: flutter pub get

      - name: Run tests, analyze, and format check
        run: |
          flutter test
          flutter analyze --no-fatal-warnings --no-fatal-infos
          dart format --set-exit-if-changed .

  build-android:
    name: Build Android APK
    needs: quality
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Create CI .env
        run: |
          cat <<'EOF' > .env
          ENVIRONMENT=staging
          API_BASE_URL=https://staging.aroosi.app/api
          FIREBASE_STORAGE_BUCKET=
          GOOGLE_WEB_CLIENT_ID=
          GOOGLE_IOS_CLIENT_ID=
          GOOGLE_ANDROID_CLIENT_ID=
          EOF

      - name: Cache pub cache
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Cache CocoaPods Pods
        uses: actions/cache@v4
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Cache Ruby bundle
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('Gemfile', 'ios/Gemfile', 'Gemfile.lock', 'ios/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install dependencies
        run: flutter pub get

      - name: Build debug APK
        run: flutter build apk --debug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-debug.apk
